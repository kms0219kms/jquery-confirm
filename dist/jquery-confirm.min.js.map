{"version":3,"sources":["jquery-confirm.js"],"names":[],"mappings":"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","file":"/gh/kms0219kms/jquery-confirm@master/js/jquery-confirm.js","sourceRoot":"","sourcesContent":["/**\n * Minified by jsDelivr using Terser v5.19.2.\n * Original file: /gh/kms0219kms/jquery-confirm@master/js/jquery-confirm.js\n *\n * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files\n */\n","/*!\n * jquery-confirm v3.3.5 (http://craftpip.github.io/jquery-confirm/)\n * Author: Boniface Pereira, Mufeed VH, Minsu Kim\n * Website: www.craftpip.com\n * Contact: hey@craftpip.com\n *\n * Copyright 2013-2024 jquery-confirm\n * Licensed under MIT (https://github.com/craftpip/jquery-confirm/blob/master/LICENSE)\n */\n\n\n/**\n * UMD (Universal Module Definition) to support CommonJS, AMD and browser\n * Thanks to https://github.com/umdjs/umd\n */\n(function(factory){\n    if(typeof define === 'function' && define.amd){\n        // AMD. Register as an anonymous module.\n        define(['jquery'], factory);\n    }else if(typeof module === 'object' && module.exports){\n        // Node/CommonJS\n        module.exports = function(root, jQuery){\n            if(jQuery === undefined){\n                // require('jQuery') returns a factory that requires window to\n                // build a jQuery instance, we normalize how we use modules\n                // that require this pattern but the window provided is a noop\n                // if it's defined (how jquery works)\n                if(typeof window !== 'undefined'){\n                    jQuery = require('jquery');\n                }\n                else{\n                    jQuery = require('jquery')(root);\n                }\n            }\n            factory(jQuery);\n            return jQuery;\n        };\n    }else{\n        // Browser globals\n        factory(jQuery);\n    }\n}(function($){\n    \"use strict\";\n\n    // locally assign window\n    var w = window;\n    // w.jconfirm\n    // w.Jconfirm;\n\n    $.fn.confirm = function(options, option2){\n        if(typeof options === 'undefined') options = {};\n        if(typeof options === 'string'){\n            options = {\n                content: options,\n                title: (option2) ? option2 : false\n            };\n        }\n        /*\n         *  Alias of $.confirm to emulate native confirm()\n         */\n        $(this).each(function(){\n            var $this = $(this);\n            if($this.attr('jc-attached')){\n                console.warn('jConfirm has already been attached to this element ', $this[0]);\n                return;\n            }\n\n            $this.on('click', function(e){\n                e.preventDefault();\n                var jcOption = $.extend({}, options);\n                if($this.attr('data-title'))\n                    jcOption['title'] = $this.attr('data-title');\n                if($this.attr('data-content'))\n                    jcOption['content'] = $this.attr('data-content');\n                if(typeof jcOption['buttons'] === 'undefined')\n                    jcOption['buttons'] = {};\n\n                jcOption['$target'] = $this;\n                if($this.attr('href') && Object.keys(jcOption['buttons']).length === 0){\n                    var buttons = $.extend(true, {}, w.jconfirm.pluginDefaults.defaultButtons, (w.jconfirm.defaults || {}).defaultButtons || {});\n                    var firstBtn = Object.keys(buttons)[0];\n                    jcOption['buttons'] = buttons;\n                    jcOption.buttons[firstBtn].action = function(){\n                        location.href = $this.attr('href');\n                    };\n                }\n                jcOption['closeIcon'] = false;\n                var instance = $.confirm(jcOption);\n            });\n\n            $this.attr('jc-attached', true);\n        });\n        return $(this);\n    };\n    $.confirm = function(options, option2){\n        if(typeof options === 'undefined') options = {};\n        if(typeof options === 'string'){\n            options = {\n                content: options,\n                title: (option2) ? option2 : false\n            };\n        }\n\n        var putDefaultButtons = !(options['buttons'] === false);\n\n        if(typeof options['buttons'] !== 'object')\n            options['buttons'] = {};\n\n        if(Object.keys(options['buttons']).length === 0 && putDefaultButtons){\n            var buttons = $.extend(true, {}, w.jconfirm.pluginDefaults.defaultButtons, (w.jconfirm.defaults || {}).defaultButtons || {});\n            options['buttons'] = buttons;\n        }\n\n        /*\n         *  Alias of jconfirm\n         */\n        return w.jconfirm(options);\n    };\n    $.alert = function(options, option2){\n        if(typeof options === 'undefined') options = {};\n        if(typeof options === 'string'){\n            options = {\n                content: options,\n                title: (option2) ? option2 : false\n            };\n        }\n\n        var putDefaultButtons = !(options['buttons'] === false);\n\n        if(typeof options.buttons !== 'object')\n            options.buttons = {};\n\n        if(Object.keys(options['buttons']).length === 0 && putDefaultButtons){\n            var buttons = $.extend(true, {}, w.jconfirm.pluginDefaults.defaultButtons, (w.jconfirm.defaults || {}).defaultButtons || {});\n            var firstBtn = Object.keys(buttons)[0];\n            options['buttons'][firstBtn] = buttons[firstBtn];\n        }\n        /*\n         *  Alias of jconfirm\n         */\n        return w.jconfirm(options);\n    };\n    $.dialog = function(options, option2){\n        if(typeof options === 'undefined') options = {};\n        if(typeof options === 'string'){\n            options = {\n                content: options,\n                title: (option2) ? option2 : false,\n                closeIcon: function(){\n                    // Just close the modal\n                }\n            };\n        }\n\n        options['buttons'] = {}; // purge buttons\n\n        if(typeof options['closeIcon'] === 'undefined'){\n            // Dialog must have a closeIcon.\n            options['closeIcon'] = function(){\n            }\n        }\n        /*\n         *  Alias of jconfirm\n         */\n        options.confirmKeys = [13];\n        return w.jconfirm(options);\n    };\n\n    w.jconfirm = function(options){\n        if(typeof options === 'undefined') options = {};\n        /*\n         * initial function for calling.\n         */\n        var pluginOptions = $.extend(true, {}, w.jconfirm.pluginDefaults);\n        if(w.jconfirm.defaults){\n            pluginOptions = $.extend(true, pluginOptions, w.jconfirm.defaults);\n        }\n\n        /*\n         * merge options with plugin defaults.\n         */\n        pluginOptions = $.extend(true, {}, pluginOptions, options);\n        var instance = new w.Jconfirm(pluginOptions);\n        w.jconfirm.instances.push(instance);\n        return instance;\n    };\n    w.Jconfirm = function(options){\n        /*\n         * constructor function Jconfirm,\n         * options = user options.\n         */\n        $.extend(this, options);\n        this._init();\n    };\n    w.Jconfirm.prototype = {\n        _init: function(){\n            var that = this;\n\n            if(!w.jconfirm.instances.length)\n                w.jconfirm.lastFocused = $('body').find(':focus');\n\n            this._id = Math.round(Math.random() * 99999);\n            /**\n             * contentParsed maintains the contents for $content, before it is put in DOM\n             */\n            this.contentParsed = $(document.createElement('div'));\n\n            if(!this.lazyOpen){\n                setTimeout(function(){\n                    that.open();\n                }, 0);\n            }\n        },\n        _buildHTML: function(){\n            var that = this;\n\n            // prefix the animation string and store in animationParsed\n            this._parseAnimation(this.animation, 'o');\n            this._parseAnimation(this.closeAnimation, 'c');\n            this._parseBgDismissAnimation(this.backgroundDismissAnimation);\n            this._parseColumnClass(this.columnClass);\n            this._parseTheme(this.theme);\n            this._parseType(this.type);\n\n            /*\n             * Append html.\n             */\n            var template = $(this.template);\n            template.find('.jconfirm-box').addClass(this.animationParsed).addClass(this.backgroundDismissAnimationParsed).addClass(this.typeParsed);\n\n            if(this.typeAnimated)\n                template.find('.jconfirm-box').addClass('jconfirm-type-animated');\n\n            if(this.useBootstrap){\n                template.find('.jc-bs3-row').addClass(this.bootstrapClasses.row);\n                template.find('.jc-bs3-row').addClass('justify-content-md-center justify-content-sm-center justify-content-xs-center justify-content-lg-center');\n\n                template.find('.jconfirm-box-container').addClass(this.columnClassParsed);\n\n                if(this.containerFluid)\n                    template.find('.jc-bs3-container').addClass(this.bootstrapClasses.containerFluid);\n                else\n                    template.find('.jc-bs3-container').addClass(this.bootstrapClasses.container);\n            }else{\n                template.find('.jconfirm-box').css('width', this.boxWidth);\n            }\n\n            if(this.titleClass)\n                template.find('.jconfirm-title-c').addClass(this.titleClass);\n\n            template.addClass(this.themeParsed);\n            var ariaLabel = 'jconfirm-box' + this._id;\n            template.find('.jconfirm-box').attr('aria-labelledby', ariaLabel).attr('tabindex', -1);\n            template.find('.jconfirm-content').attr('id', ariaLabel);\n            if(this.bgOpacity !== null)\n                template.find('.jconfirm-bg').css('opacity', this.bgOpacity);\n            if(this.rtl)\n                template.addClass('jconfirm-rtl');\n\n            this.$el = template.appendTo(this.container);\n            this.$jconfirmBoxContainer = this.$el.find('.jconfirm-box-container');\n            this.$jconfirmBox = this.$body = this.$el.find('.jconfirm-box');\n            this.$jconfirmBg = this.$el.find('.jconfirm-bg');\n            this.$title = this.$el.find('.jconfirm-title');\n            this.$titleContainer = this.$el.find('.jconfirm-title-c');\n            this.$content = this.$el.find('div.jconfirm-content');\n            this.$contentPane = this.$el.find('.jconfirm-content-pane');\n            this.$icon = this.$el.find('.jconfirm-icon-c');\n            this.$closeIcon = this.$el.find('.jconfirm-closeIcon');\n            this.$holder = this.$el.find('.jconfirm-holder');\n            // this.$content.css(this._getCSS(this.animationSpeed, this.animationBounce));\n            this.$btnc = this.$el.find('.jconfirm-buttons');\n            this.$scrollPane = this.$el.find('.jconfirm-scrollpane');\n\n            that.setStartingPoint();\n\n            // for loading content via URL\n            this._contentReady = $.Deferred();\n            this._modalReady = $.Deferred();\n            this.$holder.css({\n                'padding-top': this.offsetTop,\n                'padding-bottom': this.offsetBottom,\n            });\n\n            this.setTitle();\n            this.setIcon();\n            this._setButtons();\n            this._parseContent();\n            this.initDraggable();\n\n            if(this.isAjax)\n                this.showLoading(false);\n\n            $.when(this._contentReady, this._modalReady).then(function(){\n                if(that.isAjaxLoading)\n                    setTimeout(function(){\n                        that.isAjaxLoading = false;\n                        that.setContent();\n                        that.setTitle();\n                        that.setIcon();\n                        setTimeout(function(){\n                            that.hideLoading(false);\n                            that._updateContentMaxHeight();\n                        }, 100);\n                        if(typeof that.onContentReady === 'function')\n                            that.onContentReady();\n                    }, 50);\n                else{\n                    // that.setContent();\n                    that._updateContentMaxHeight();\n                    that.setTitle();\n                    that.setIcon();\n                    if(typeof that.onContentReady === 'function')\n                        that.onContentReady();\n                }\n\n                // start countdown after content has loaded.\n                if(that.autoClose)\n                    that._startCountDown();\n            }).then(function(){\n                that._watchContent();\n            });\n\n            if(this.animation === 'none'){\n                this.animationSpeed = 1;\n                this.animationBounce = 1;\n            }\n\n            this.$body.css(this._getCSS(this.animationSpeed, this.animationBounce));\n            this.$contentPane.css(this._getCSS(this.animationSpeed, 1));\n            this.$jconfirmBg.css(this._getCSS(this.animationSpeed, 1));\n            this.$jconfirmBoxContainer.css(this._getCSS(this.animationSpeed, 1));\n        },\n        _typePrefix: 'jconfirm-type-',\n        typeParsed: '',\n        _parseType: function(type){\n            this.typeParsed = this._typePrefix + type;\n        },\n        setType: function(type){\n            var oldClass = this.typeParsed;\n            this._parseType(type);\n            this.$jconfirmBox.removeClass(oldClass).addClass(this.typeParsed);\n        },\n        themeParsed: '',\n        _themePrefix: 'jconfirm-',\n        setTheme: function(theme){\n            var previous = this.theme;\n            this.theme = theme || this.theme;\n            this._parseTheme(this.theme);\n            if(previous)\n                this.$el.removeClass(previous);\n            this.$el.addClass(this.themeParsed);\n            this.theme = theme;\n        },\n        _parseTheme: function(theme){\n            var that = this;\n            theme = theme.split(',');\n            $.each(theme, function(k, a){\n                if(a.indexOf(that._themePrefix) === -1)\n                    theme[k] = that._themePrefix + $.trim(a);\n            });\n            this.themeParsed = theme.join(' ').toLowerCase();\n        },\n        backgroundDismissAnimationParsed: '',\n        _bgDismissPrefix: 'jconfirm-hilight-',\n        _parseBgDismissAnimation: function(bgDismissAnimation){\n            var animation = bgDismissAnimation.split(',');\n            var that = this;\n            $.each(animation, function(k, a){\n                if(a.indexOf(that._bgDismissPrefix) === -1)\n                    animation[k] = that._bgDismissPrefix + $.trim(a);\n            });\n            this.backgroundDismissAnimationParsed = animation.join(' ').toLowerCase();\n        },\n        animationParsed: '',\n        closeAnimationParsed: '',\n        _animationPrefix: 'jconfirm-animation-',\n        setAnimation: function(animation){\n            this.animation = animation || this.animation;\n            this._parseAnimation(this.animation, 'o');\n        },\n        _parseAnimation: function(animation, which){\n            which = which || 'o'; // parse what animation and store where. open or close?\n            var animations = animation.split(',');\n            var that = this;\n            $.each(animations, function(k, a){\n                if(a.indexOf(that._animationPrefix) === -1)\n                    animations[k] = that._animationPrefix + $.trim(a);\n            });\n            var a_string = animations.join(' ').toLowerCase();\n            if(which === 'o')\n                this.animationParsed = a_string;\n            else\n                this.closeAnimationParsed = a_string;\n\n            return a_string;\n        },\n        setCloseAnimation: function(closeAnimation){\n            this.closeAnimation = closeAnimation || this.closeAnimation;\n            this._parseAnimation(this.closeAnimation, 'c');\n        },\n        setAnimationSpeed: function(speed){\n            this.animationSpeed = speed || this.animationSpeed;\n            // this.$body.css(this._getCSS(this.animationSpeed, this.animationBounce));\n        },\n        columnClassParsed: '',\n        setColumnClass: function(colClass){\n            if(!this.useBootstrap){\n                console.warn(\"cannot set columnClass, useBootstrap is set to false\");\n                return;\n            }\n            this.columnClass = colClass || this.columnClass;\n            this._parseColumnClass(this.columnClass);\n            this.$jconfirmBoxContainer.addClass(this.columnClassParsed);\n        },\n        _updateContentMaxHeight: function(){\n            var height = $(window).height() - (this.$jconfirmBox.outerHeight() - this.$contentPane.outerHeight()) - (this.offsetTop + this.offsetBottom);\n            this.$contentPane.css({\n                'max-height': height + 'px'\n            });\n        },\n        setBoxWidth: function(width){\n            if(this.useBootstrap){\n                console.warn(\"cannot set boxWidth, useBootstrap is set to true\");\n                return;\n            }\n            this.boxWidth = width;\n            this.$jconfirmBox.css('width', width);\n        },\n        _parseColumnClass: function(colClass){\n            colClass = colClass.toLowerCase();\n            var p;\n            switch(colClass){\n                case 'xl':\n                case 'xlarge':\n                    p = 'col-md-12';\n                    break;\n                case 'l':\n                case 'large':\n                    p = 'col-md-8 col-md-offset-2';\n                    break;\n                case 'm':\n                case 'medium':\n                    p = 'col-md-6 col-md-offset-3';\n                    break;\n                case 's':\n                case 'small':\n                    p = 'col-md-4 col-md-offset-4';\n                    break;\n                case 'xs':\n                case 'xsmall':\n                    p = 'col-md-2 col-md-offset-5';\n                    break;\n                default:\n                    p = colClass;\n            }\n            this.columnClassParsed = p;\n        },\n        initDraggable: function(){\n            var that = this;\n            var $t = this.$titleContainer;\n\n            this.resetDrag();\n            if(this.draggable){\n                $t.on('mousedown', function(e){\n                    $t.addClass('jconfirm-hand');\n                    that.mouseX = e.clientX;\n                    that.mouseY = e.clientY;\n                    that.isDrag = true;\n                });\n                $(window).on('mousemove.' + this._id, function(e){\n                    if(that.isDrag){\n                        that.movingX = e.clientX - that.mouseX + that.initialX;\n                        that.movingY = e.clientY - that.mouseY + that.initialY;\n                        that.setDrag();\n                    }\n                });\n\n                $(window).on('mouseup.' + this._id, function(){\n                    $t.removeClass('jconfirm-hand');\n                    if(that.isDrag){\n                        that.isDrag = false;\n                        that.initialX = that.movingX;\n                        that.initialY = that.movingY;\n                    }\n                })\n            }\n        },\n        resetDrag: function(){\n            this.isDrag = false;\n            this.initialX = 0;\n            this.initialY = 0;\n            this.movingX = 0;\n            this.movingY = 0;\n            this.mouseX = 0;\n            this.mouseY = 0;\n            this.$jconfirmBoxContainer.css('transform', 'translate(' + 0 + 'px, ' + 0 + 'px)');\n        },\n        setDrag: function(){\n            if(!this.draggable)\n                return;\n\n            this.alignMiddle = false;\n            var boxWidth = this.$jconfirmBox.outerWidth();\n            var boxHeight = this.$jconfirmBox.outerHeight();\n            var windowWidth = $(window).width();\n            var windowHeight = $(window).height();\n            var that = this;\n            var dragUpdate = 1;\n            if(that.movingX % dragUpdate === 0 || that.movingY % dragUpdate === 0){\n                if(that.dragWindowBorder){\n                    var leftDistance = (windowWidth / 2) - boxWidth / 2;\n                    var topDistance = (windowHeight / 2) - boxHeight / 2;\n                    topDistance -= that.dragWindowGap;\n                    leftDistance -= that.dragWindowGap;\n\n                    if(leftDistance + that.movingX < 0){\n                        that.movingX = -leftDistance;\n                    }else if(leftDistance - that.movingX < 0){\n                        that.movingX = leftDistance;\n                    }\n\n                    if(topDistance + that.movingY < 0){\n                        that.movingY = -topDistance;\n                    }else if(topDistance - that.movingY < 0){\n                        that.movingY = topDistance;\n                    }\n                }\n\n                that.$jconfirmBoxContainer.css('transform', 'translate(' + that.movingX + 'px, ' + that.movingY + 'px)');\n            }\n        },\n        _scrollTop: function(){\n            if(typeof pageYOffset !== 'undefined'){\n                //most browsers except IE before #9\n                return pageYOffset;\n            }\n            else{\n                var B = document.body; //IE 'quirks'\n                var D = document.documentElement; //IE with doctype\n                D = (D.clientHeight) ? D : B;\n                return D.scrollTop;\n            }\n        },\n        _watchContent: function(){\n            var that = this;\n            if(this._timer) clearInterval(this._timer);\n\n            var prevContentHeight = 0;\n            this._timer = setInterval(function(){\n                if(that.smoothContent){\n                    var contentHeight = that.$content.outerHeight() || 0;\n                    if(contentHeight !== prevContentHeight){\n\n                        // Commented out to prevent scroll to top when updating the content\n                        // (for example when using ajax in forms in content)\n                        // that.$contentPane.css({\n                        //     'height': contentHeight\n                        // }).scrollTop(0);\n                        prevContentHeight = contentHeight;\n                    }\n                    var wh = $(window).height();\n                    var total = that.offsetTop + that.offsetBottom + that.$jconfirmBox.height() - that.$contentPane.height() + that.$content.height();\n                    if(total < wh){\n                        that.$contentPane.addClass('no-scroll');\n                    }else{\n                        that.$contentPane.removeClass('no-scroll');\n                    }\n                }\n            }, this.watchInterval);\n        },\n        _overflowClass: 'jconfirm-overflow',\n        _hilightAnimating: false,\n        highlight: function(){\n            this.hiLightModal();\n        },\n        hiLightModal: function(){\n            var that = this;\n            if(this._hilightAnimating)\n                return;\n\n            that.$body.addClass('hilight');\n            var duration = parseFloat(that.$body.css('animation-duration')) || 2;\n            this._hilightAnimating = true;\n            setTimeout(function(){\n                that._hilightAnimating = false;\n                that.$body.removeClass('hilight');\n            }, duration * 1000);\n        },\n        _bindEvents: function(){\n            var that = this;\n            this.boxClicked = false;\n\n            this.$scrollPane.click(function(e){ // Ignore propagated clicks\n                if(!that.boxClicked){ // Background clicked\n                    /*\n                     If backgroundDismiss is a function and its return value is truthy\n                     proceed to close the modal.\n                     */\n                    var buttonName = false;\n                    var shouldClose = false;\n                    var str;\n\n                    if(typeof that.backgroundDismiss === 'function')\n                        str = that.backgroundDismiss();\n                    else\n                        str = that.backgroundDismiss;\n\n                    if(typeof str === 'string' && typeof that.buttons[str] !== 'undefined'){\n                        buttonName = str;\n                        shouldClose = false;\n                    }else if(typeof str === 'undefined' || !!(str) === true){\n                        shouldClose = true;\n                    }else{\n                        shouldClose = false;\n                    }\n\n                    if(buttonName){\n                        var btnResponse = that.buttons[buttonName].action.apply(that);\n                        shouldClose = (typeof btnResponse === 'undefined') || !!(btnResponse);\n                    }\n\n                    if(shouldClose)\n                        that.close();\n                    else\n                        that.hiLightModal();\n                }\n                that.boxClicked = false;\n            });\n\n            this.$jconfirmBox.click(function(e){\n                that.boxClicked = true;\n            });\n\n            var isKeyDown = false;\n            $(window).on('jcKeyDown.' + that._id, function(e){\n                if(!isKeyDown){\n                    isKeyDown = true;\n                }\n            });\n            $(window).on('keyup.' + that._id, function(e){\n                if(isKeyDown){\n                    that.reactOnKey(e);\n                    isKeyDown = false;\n                }\n            });\n\n            $(window).on('resize.' + this._id, function(){\n                that._updateContentMaxHeight();\n                setTimeout(function(){\n                    that.resetDrag();\n                }, 100);\n            });\n        },\n        _cubic_bezier: '0.36, 0.55, 0.19',\n        _getCSS: function(speed, bounce){\n            return {\n                '-webkit-transition-duration': speed / 1000 + 's',\n                'transition-duration': speed / 1000 + 's',\n                '-webkit-transition-timing-function': 'cubic-bezier(' + this._cubic_bezier + ', ' + bounce + ')',\n                'transition-timing-function': 'cubic-bezier(' + this._cubic_bezier + ', ' + bounce + ')'\n            };\n        },\n        _setButtons: function(){\n            var that = this;\n            /*\n             * Settings up buttons\n             */\n\n            var total_buttons = 0;\n            if(typeof this.buttons !== 'object')\n                this.buttons = {};\n\n            $.each(this.buttons, function(key, button){\n                total_buttons += 1;\n                if(typeof button === 'function'){\n                    that.buttons[key] = button = {\n                        action: button\n                    };\n                }\n\n                that.buttons[key].text = button.text || key;\n                that.buttons[key].btnClass = button.btnClass || 'btn-default';\n                that.buttons[key].action = button.action || function(){\n                };\n                that.buttons[key].keys = button.keys || [];\n                that.buttons[key].isHidden = button.isHidden || false;\n                that.buttons[key].isDisabled = button.isDisabled || false;\n\n                $.each(that.buttons[key].keys, function(i, a){\n                    that.buttons[key].keys[i] = a.toLowerCase();\n                });\n\n                var button_element = $('<button type=\"button\" class=\"btn\"></button>')\n                    .html(that.buttons[key].text)\n                    .addClass(that.buttons[key].btnClass)\n                    .prop('disabled', that.buttons[key].isDisabled)\n                    .css('display', that.buttons[key].isHidden ? 'none' : '')\n                    .click(function(e){\n                        e.preventDefault();\n                        var res = that.buttons[key].action.apply(that, [that.buttons[key]]);\n                        that.onAction.apply(that, [key, that.buttons[key]]);\n                        that._stopCountDown();\n                        if(typeof res === 'undefined' || res)\n                            that.close();\n                    });\n\n                that.buttons[key].el = button_element;\n                that.buttons[key].setText = function(text){\n                    button_element.html(text);\n                };\n                that.buttons[key].addClass = function(className){\n                    button_element.addClass(className);\n                };\n                that.buttons[key].removeClass = function(className){\n                    button_element.removeClass(className);\n                };\n                that.buttons[key].disable = function(){\n                    that.buttons[key].isDisabled = true;\n                    button_element.prop('disabled', true);\n                };\n                that.buttons[key].enable = function(){\n                    that.buttons[key].isDisabled = false;\n                    button_element.prop('disabled', false);\n                };\n                that.buttons[key].show = function(){\n                    that.buttons[key].isHidden = false;\n                    button_element.css('display', '');\n                };\n                that.buttons[key].hide = function(){\n                    that.buttons[key].isHidden = true;\n                    button_element.css('display', 'none');\n                };\n                /*\n                 Buttons are prefixed with $_ or $$ for quick access\n                 */\n                that['$_' + key] = that['$$' + key] = button_element;\n                that.$btnc.append(button_element);\n            });\n\n            if(total_buttons === 0) this.$btnc.hide();\n            if(this.closeIcon === null && total_buttons === 0){\n                /*\n                 in case when no buttons are present & closeIcon is null, closeIcon is set to true,\n                 set closeIcon to true to explicitly tell to hide the close icon\n                 */\n                this.closeIcon = true;\n            }\n\n            if(this.closeIcon){\n                if(this.closeIconClass){\n                    // user requires a custom class.\n                    var closeHtml = '<i id=\"closeIconClass\"></i>';\n                    this.$closeIcon.html(closeHtml);\n                    $(\"#closeIconClass\").addClass(this.closeIconClass);\n                }\n\n                this.$closeIcon.click(function(e){\n                    e.preventDefault();\n\n                    var buttonName = false;\n                    var shouldClose = false;\n                    var str;\n\n                    if(typeof that.closeIcon === 'function'){\n                        str = that.closeIcon();\n                    }else{\n                        str = that.closeIcon;\n                    }\n\n                    if(typeof str === 'string' && typeof that.buttons[str] !== 'undefined'){\n                        buttonName = str;\n                        shouldClose = false;\n                    }else if(typeof str === 'undefined' || !!(str) === true){\n                        shouldClose = true;\n                    }else{\n                        shouldClose = false;\n                    }\n                    if(buttonName){\n                        var btnResponse = that.buttons[buttonName].action.apply(that);\n                        shouldClose = (typeof btnResponse === 'undefined') || !!(btnResponse);\n                    }\n                    if(shouldClose){\n                        that.close();\n                    }\n                });\n                this.$closeIcon.show();\n            }else{\n                this.$closeIcon.hide();\n            }\n        },\n        setTitle: function(string, force){\n            force = force || false;\n\n            if(typeof string !== 'undefined')\n                if(typeof string === 'string')\n                    this.title = string;\n                else if(typeof string === 'function'){\n                    if(typeof string.promise === 'function')\n                        console.error('Promise was returned from title function, this is not supported.');\n\n                    var response = string();\n                    if(typeof response === 'string')\n                        this.title = response;\n                    else\n                        this.title = false;\n                }else\n                    this.title = false;\n\n            if(this.isAjaxLoading && !force)\n                return;\n\n            this.$title.html(this.title || '');\n            this.updateTitleContainer();\n        },\n        setIcon: function(iconClass, force){\n            force = force || false;\n\n            if(typeof iconClass !== 'undefined')\n                if(typeof iconClass === 'string')\n                    this.icon = iconClass;\n                else if(typeof iconClass === 'function'){\n                    var response = iconClass();\n                    if(typeof response === 'string')\n                        this.icon = response;\n                    else\n                        this.icon = false;\n                }\n                else\n                    this.icon = false;\n\n            if(this.isAjaxLoading && !force)\n                return;\n\n            this.$icon.html(this.icon ? '<i id=\"setIcon\"></i>' : '');\n            $(\"#setIcon\").addClass(this.icon);\n            this.updateTitleContainer();\n        },\n        updateTitleContainer: function(){\n            if(!this.title && !this.icon){\n                this.$titleContainer.hide();\n            }else{\n                this.$titleContainer.show();\n            }\n        },\n        setContentPrepend: function(content, force){\n            if(!content)\n                return;\n\n            this.contentParsed.prepend(content);\n        },\n        setContentAppend: function(content){\n            if(!content)\n                return;\n\n            this.contentParsed.append(content);\n        },\n        setContent: function(content, force){\n            force = !!force;\n            var that = this;\n            if(content)\n                this.contentParsed.html('').append(content);\n            if(this.isAjaxLoading && !force)\n                return;\n\n            this.$content.html('');\n            this.$content.append(this.contentParsed);\n            setTimeout(function(){\n                that.$body.find('input[autofocus]:visible:first').focus();\n            }, 100);\n        },\n        loadingSpinner: false,\n        showLoading: function(disableButtons){\n            this.loadingSpinner = true;\n            this.$jconfirmBox.addClass('loading');\n            if(disableButtons)\n                this.$btnc.find('button').prop('disabled', true);\n\n        },\n        hideLoading: function(enableButtons){\n            this.loadingSpinner = false;\n            this.$jconfirmBox.removeClass('loading');\n            if(enableButtons)\n                this.$btnc.find('button').prop('disabled', false);\n\n        },\n        ajaxResponse: false,\n        contentParsed: '',\n        isAjax: false,\n        isAjaxLoading: false,\n        _parseContent: function(){\n            var that = this;\n            var e = '&nbsp;';\n\n            if(typeof this.content === 'function'){\n                var res = this.content.apply(this);\n                if(typeof res === 'string'){\n                    this.content = res;\n                }\n                else if(typeof res === 'object' && typeof res.always === 'function'){\n                    // this is ajax loading via promise\n                    this.isAjax = true;\n                    this.isAjaxLoading = true;\n                    res.always(function(data, status, xhr){\n                        that.ajaxResponse = {\n                            data: data,\n                            status: status,\n                            xhr: xhr\n                        };\n                        that._contentReady.resolve(data, status, xhr);\n                        if(typeof that.contentLoaded === 'function')\n                            that.contentLoaded(data, status, xhr);\n                    });\n                    this.content = e;\n                }else{\n                    this.content = e;\n                }\n            }\n\n            if(typeof this.content === 'string' && this.content.substr(0, 4).toLowerCase() === 'url:'){\n                this.isAjax = true;\n                this.isAjaxLoading = true;\n                var u = this.content.substring(4, this.content.length);\n                $.get(u).done(function(html){\n                    that.contentParsed.html(html);\n                }).always(function(data, status, xhr){\n                    that.ajaxResponse = {\n                        data: data,\n                        status: status,\n                        xhr: xhr\n                    };\n                    that._contentReady.resolve(data, status, xhr);\n                    if(typeof that.contentLoaded === 'function')\n                        that.contentLoaded(data, status, xhr);\n                });\n            }\n\n            if(!this.content)\n                this.content = e;\n\n            if(!this.isAjax){\n                this.contentParsed.html(this.content);\n                this.setContent();\n                that._contentReady.resolve();\n            }\n        },\n        _stopCountDown: function(){\n            clearInterval(this.autoCloseInterval);\n            if(this.$cd)\n                this.$cd.remove();\n        },\n        _startCountDown: function(){\n            var that = this;\n            var opt = this.autoClose.split('|');\n            if(opt.length !== 2){\n                console.error('Invalid option for autoClose. example \\'close|10000\\'');\n                return false;\n            }\n\n            var button_key = opt[0];\n            var time = parseInt(opt[1]);\n            if(typeof this.buttons[button_key] === 'undefined'){\n                console.error('Invalid button key \\'' + button_key + '\\' for autoClose');\n                return false;\n            }\n\n            var seconds = Math.ceil(time / 1000);\n            this.$cd = $('<span class=\"countdown\"> (' + seconds + ')</span>')\n                .appendTo(this['$_' + button_key]);\n\n            this.autoCloseInterval = setInterval(function(){\n                that.$cd.html(' (' + (seconds -= 1) + ') ');\n                if(seconds <= 0){\n                    that['$$' + button_key].trigger('click');\n                    that._stopCountDown();\n                }\n            }, 1000);\n        },\n        _getKey: function(key){\n            // very necessary keys.\n            switch(key){\n                case 192:\n                    return 'tilde';\n                case 13:\n                    return 'enter';\n                case 16:\n                    return 'shift';\n                case 9:\n                    return 'tab';\n                case 20:\n                    return 'capslock';\n                case 17:\n                    return 'ctrl';\n                case 91:\n                    return 'win';\n                case 18:\n                    return 'alt';\n                case 27:\n                    return 'esc';\n                case 32:\n                    return 'space';\n            }\n\n            // only trust alphabets with this.\n            var initial = String.fromCharCode(key);\n            if(/^[A-z0-9]+$/.test(initial))\n                return initial.toLowerCase();\n            else\n                return false;\n        },\n        reactOnKey: function(e){\n            var that = this;\n\n            /*\n             Prevent keyup event if the dialog is not last!\n             */\n            var a = $('.jconfirm');\n            if(a.eq(a.length - 1)[0] !== this.$el[0])\n                return false;\n\n            var key = e.which;\n            /*\n             Do not react if Enter or Space is pressed on input elements\n             */\n            if(this.$content.find(':input').is(':focus') && /13|32/.test(key))\n                return false;\n\n            var keyChar = this._getKey(key);\n\n            // If esc is pressed\n            if(keyChar === 'esc' && this.escapeKey){\n                if(this.escapeKey === true){\n                    this.$scrollPane.trigger('click');\n                }\n                else if(typeof this.escapeKey === 'string' || typeof this.escapeKey === 'function'){\n                    var buttonKey;\n                    if(typeof this.escapeKey === 'function'){\n                        buttonKey = this.escapeKey();\n                    }else{\n                        buttonKey = this.escapeKey;\n                    }\n\n                    if(buttonKey)\n                        if(typeof this.buttons[buttonKey] === 'undefined'){\n                            console.warn('Invalid escapeKey, no buttons found with key ' + buttonKey);\n                        }else{\n                            this['$_' + buttonKey].trigger('click');\n                        }\n                }\n            }\n\n            // check if any button is listening to this key.\n            $.each(this.buttons, function(key, button){\n                if(button.keys.indexOf(keyChar) !== -1){\n                    that['$_' + key].trigger('click');\n                }\n            });\n        },\n        setDialogCenter: function(){\n            console.info('setDialogCenter is deprecated, dialogs are centered with CSS3 tables');\n        },\n        _unwatchContent: function(){\n            clearInterval(this._timer);\n        },\n        close: function(onClosePayload){\n            var that = this;\n\n            if(typeof this.onClose === 'function')\n                this.onClose(onClosePayload);\n\n            this._unwatchContent();\n\n            /*\n             unbind the window resize & keyup event.\n             */\n            $(window).unbind('resize.' + this._id);\n            $(window).unbind('keyup.' + this._id);\n            $(window).unbind('jcKeyDown.' + this._id);\n\n            if(this.draggable){\n                $(window).unbind('mousemove.' + this._id);\n                $(window).unbind('mouseup.' + this._id);\n                this.$titleContainer.unbind('mousedown');\n            }\n\n            that.$el.removeClass(that.loadedClass);\n            $('body').removeClass('jconfirm-no-scroll-' + that._id);\n            that.$jconfirmBoxContainer.removeClass('jconfirm-no-transition');\n\n            setTimeout(function(){\n                that.$body.addClass(that.closeAnimationParsed);\n                that.$jconfirmBg.addClass('jconfirm-bg-h');\n                var closeTimer = (that.closeAnimation === 'none') ? 1 : that.animationSpeed;\n\n                setTimeout(function(){\n                    that.$el.remove();\n\n                    var l = w.jconfirm.instances;\n                    var i = w.jconfirm.instances.length - 1;\n                    for(i; i >= 0; i--){\n                        if(w.jconfirm.instances[i]._id === that._id){\n                            w.jconfirm.instances.splice(i, 1);\n                        }\n                    }\n\n                    // Focusing a element, scrolls automatically to that element.\n                    // no instances should be open, lastFocused should be true, the lastFocused element must exists in DOM\n                    if(!w.jconfirm.instances.length){\n                        if(that.scrollToPreviousElement && w.jconfirm.lastFocused && w.jconfirm.lastFocused.length && $.contains(document, w.jconfirm.lastFocused[0])){\n                            var $lf = w.jconfirm.lastFocused;\n                            if(that.scrollToPreviousElementAnimate){\n                                var st = $(window).scrollTop();\n                                var ot = w.jconfirm.lastFocused.offset().top;\n                                var wh = $(window).height();\n                                if(!(ot > st && ot < (st + wh))){\n                                    var scrollTo = (ot - Math.round((wh / 3)));\n                                    $('html, body').animate({\n                                        scrollTop: scrollTo\n                                    }, that.animationSpeed, 'swing', function(){\n                                        // gracefully scroll and then focus.\n                                        $lf.focus();\n                                    });\n                                }else{\n                                    // the element to be focused is already in view.\n                                    $lf.focus();\n                                }\n                            }else{\n                                $lf.focus();\n                            }\n                            w.jconfirm.lastFocused = false;\n                        }\n                    }\n\n                    if(typeof that.onDestroy === 'function')\n                        that.onDestroy();\n\n                }, closeTimer * 0.40);\n            }, 50);\n\n            return true;\n        },\n        open: function(){\n            if(this.isOpen())\n                return false;\n\n            // var that = this;\n            this._buildHTML();\n            this._bindEvents();\n            this._open();\n\n            return true;\n        },\n        setStartingPoint: function(){\n            var el = false;\n\n            if(this.animateFromElement !== true && this.animateFromElement){\n                el = this.animateFromElement;\n                w.jconfirm.lastClicked = false;\n            }else if(w.jconfirm.lastClicked && this.animateFromElement === true){\n                el = w.jconfirm.lastClicked;\n                w.jconfirm.lastClicked = false;\n            }else{\n                return false;\n            }\n\n            if(!el)\n                return false;\n\n            var offset = el.offset();\n\n            var iTop = el.outerHeight() / 2;\n            var iLeft = el.outerWidth() / 2;\n\n            // placing position of jconfirm modal in center of clicked element\n            iTop -= this.$jconfirmBox.outerHeight() / 2;\n            iLeft -= this.$jconfirmBox.outerWidth() / 2;\n\n            // absolute position on screen\n            var sourceTop = offset.top + iTop;\n            sourceTop = sourceTop - this._scrollTop();\n            var sourceLeft = offset.left + iLeft;\n\n            // window halved\n            var wh = $(window).height() / 2;\n            var ww = $(window).width() / 2;\n\n            var targetH = wh - this.$jconfirmBox.outerHeight() / 2;\n            var targetW = ww - this.$jconfirmBox.outerWidth() / 2;\n\n            sourceTop -= targetH;\n            sourceLeft -= targetW;\n\n            // Check if the element is inside the viewable window.\n            if(Math.abs(sourceTop) > wh || Math.abs(sourceLeft) > ww)\n                return false;\n\n            this.$jconfirmBoxContainer.css('transform', 'translate(' + sourceLeft + 'px, ' + sourceTop + 'px)');\n        },\n        _open: function(){\n            var that = this;\n            if(typeof that.onOpenBefore === 'function')\n                that.onOpenBefore();\n\n            this.$body.removeClass(this.animationParsed);\n            this.$jconfirmBg.removeClass('jconfirm-bg-h');\n            this.$body.focus();\n\n            that.$jconfirmBoxContainer.css('transform', 'translate(' + 0 + 'px, ' + 0 + 'px)');\n\n            setTimeout(function(){\n                that.$body.css(that._getCSS(that.animationSpeed, 1));\n                that.$body.css({\n                    'transition-property': that.$body.css('transition-property') + ', margin'\n                });\n                that.$jconfirmBoxContainer.addClass('jconfirm-no-transition');\n                that._modalReady.resolve();\n                if(typeof that.onOpen === 'function')\n                    that.onOpen();\n\n                that.$el.addClass(that.loadedClass);\n            }, this.animationSpeed);\n        },\n        loadedClass: 'jconfirm-open',\n        isClosed: function(){\n            return !this.$el || this.$el.parent().length === 0;\n        },\n        isOpen: function(){\n            return !this.isClosed();\n        },\n        toggle: function(){\n            if(!this.isOpen())\n                this.open();\n            else\n                this.close();\n        }\n    };\n\n    w.jconfirm.instances = [];\n    w.jconfirm.lastFocused = false;\n    w.jconfirm.pluginDefaults = {\n        template: '' +\n            '<div class=\"jconfirm\">' +\n            '<div class=\"jconfirm-bg jconfirm-bg-h\"></div>' +\n            '<div class=\"jconfirm-scrollpane\">' +\n            '<div class=\"jconfirm-row\">' +\n            '<div class=\"jconfirm-cell\">' +\n            '<div class=\"jconfirm-holder\">' +\n            '<div class=\"jc-bs3-container\">' +\n            '<div class=\"jc-bs3-row\">' +\n            '<div class=\"jconfirm-box-container jconfirm-animated\">' +\n            '<div class=\"jconfirm-box\" role=\"dialog\" aria-labelledby=\"labelled\" tabindex=\"-1\">' +\n            '<div class=\"jconfirm-closeIcon\">&times;</div>' +\n            '<div class=\"jconfirm-title-c\">' +\n            '<span class=\"jconfirm-icon-c\"></span>' +\n            '<span class=\"jconfirm-title\"></span>' +\n            '</div>' +\n            '<div class=\"jconfirm-content-pane\">' +\n            '<div class=\"jconfirm-content\"></div>' +\n            '</div>' +\n            '<div class=\"jconfirm-buttons\">' +\n            '</div>' +\n            '<div class=\"jconfirm-clear\">' +\n            '</div>' +\n            '</div>' +\n            '</div>' +\n            '</div>' +\n            '</div>' +\n            '</div>' +\n            '</div>' +\n            '</div>' +\n            '</div></div>',\n        title: 'Hello',\n        titleClass: '',\n        type: 'default',\n        typeAnimated: true,\n        draggable: true,\n        dragWindowGap: 15,\n        dragWindowBorder: true,\n        animateFromElement: true,\n        /**\n         * @deprecated\n         */\n        alignMiddle: true,\n        smoothContent: true,\n        content: 'Are you sure to continue?',\n        buttons: {},\n        defaultButtons: {\n            ok: {\n                action: function(){\n                }\n            },\n            close: {\n                action: function(){\n                }\n            }\n        },\n        contentLoaded: function(){\n        },\n        icon: '',\n        lazyOpen: false,\n        bgOpacity: null,\n        theme: 'light',\n        animation: 'scale',\n        closeAnimation: 'scale',\n        animationSpeed: 400,\n        animationBounce: 1,\n        escapeKey: true,\n        rtl: false,\n        container: 'body',\n        containerFluid: false,\n        backgroundDismiss: false,\n        backgroundDismissAnimation: 'shake',\n        autoClose: false,\n        closeIcon: null,\n        closeIconClass: false,\n        watchInterval: 100,\n        columnClass: 'col-md-4 col-md-offset-4 col-sm-6 col-sm-offset-3 col-xs-10 col-xs-offset-1',\n        boxWidth: '50%',\n        scrollToPreviousElement: true,\n        scrollToPreviousElementAnimate: true,\n        useBootstrap: true,\n        offsetTop: 40,\n        offsetBottom: 40,\n        bootstrapClasses: {\n            container: 'container',\n            containerFluid: 'container-fluid',\n            row: 'row'\n        },\n        onContentReady: function(){\n\n        },\n        onOpenBefore: function(){\n\n        },\n        onOpen: function(){\n\n        },\n        onClose: function(){\n\n        },\n        onDestroy: function(){\n\n        },\n        onAction: function(){\n\n        }\n    };\n\n    /**\n     * This refers to the issue #241 and #246\n     *\n     * Problem:\n     * Button A is clicked (keydown) using the Keyboard ENTER key\n     * A opens the jconfirm modal B,\n     * B has registered ENTER key for one of its button C\n     * A is released (keyup), B gets the keyup event and triggers C.\n     *\n     * Solution:\n     * Register a global keydown event, that tells jconfirm if the keydown originated inside jconfirm\n     */\n    var keyDown = false;\n    $(window).on('keydown', function(e){\n        if(!keyDown){\n            var $target = $(e.target);\n            var pass = false;\n            if($target.closest('.jconfirm-box').length)\n                pass = true;\n            if(pass)\n                $(window).trigger('jcKeyDown');\n\n            keyDown = true;\n        }\n    });\n    $(window).on('keyup', function(){\n        keyDown = false;\n    });\n    w.jconfirm.lastClicked = false;\n    $(document).on('mousedown', 'button, a, [jc-source]', function(){\n        w.jconfirm.lastClicked = $(this);\n    });\n}));\n"]}